package omegaPlots;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class OmegaPlots extends javax.swing.JFrame {
    double epsilonLow, epsilonHigh;
    double omegaP;
    double thickness;
    double kStart1, kEnd1, kStep1;
    double kStart2, kEnd2, kStep2;

    static String [] FILE_DESCRIPTION={"Text (*.txt)"};
    
    /**
     * Creates new form TransferMatrix3
     */
    public OmegaPlots() {
        initComponents();
        setDefaultValues();
    }

    private void setDefaultValues() {
        jtEpsilonLow.setText("");
        jtEpsilonHigh.setText("");
        jtOmegaP.setText("");
        jtThickness.setText("");
        jtKStart1.setText("");
        jtKEnd1.setText("");
        jtKStep1.setText("");
        jtKStart2.setText("");
        jtKEnd2.setText("");
        jtKStep2.setText("");
    }            

    public String setFullPathName(String filename) throws IOException {
        File currdir=new File(".");
        File file=new File(filename);
        String fname;
        if(filename.equals(file.getName()))
            fname=currdir.getCanonicalPath()+"/"+file.getName();
        else
            fname=filename;
        return fname;
    }

    public boolean saveData(String name) {
        BufferedWriter  fidw;
        try {
            String fname=setFullPathName(name);
            fidw=new BufferedWriter(new FileWriter(fname));
            fidw.write("#OMEGA PLOT DATA\n");
            fidw.write("Epsilon low = ");
            fidw.write(jtEpsilonLow.getText());
            fidw.newLine();
            fidw.write("Epsilon high = ");
            fidw.write(jtEpsilonHigh.getText());
            fidw.newLine();
            fidw.write("OmegaP = ");
            fidw.write(jtOmegaP.getText());
            fidw.newLine();
            fidw.write("Thickness d = ");
            fidw.write(jtThickness.getText());
            fidw.newLine();
            fidw.write("k start (lower part) = ");
            fidw.write(jtKStart1.getText());
            fidw.newLine();
            fidw.write("k end (lower part) = ");
            fidw.write(jtKEnd1.getText());
            fidw.newLine();
            fidw.write("k step (lower part) = ");
            fidw.write(jtKStep1.getText());
            fidw.newLine();
            fidw.write("k start (upper part) = ");
            fidw.write(jtKStart2.getText());
            fidw.newLine();
            fidw.write("k end (upper part) = ");
            fidw.write(jtKEnd2.getText());
            fidw.newLine();
            fidw.write("k step (upper part) = ");
            fidw.write(jtKStep2.getText());
            fidw.newLine();
            fidw.close();
            return true;
        }
        catch (IOException ie){
            return false;
        }        
    }   
    
    String getNextValue(BufferedReader fid) throws IOException {
        String [] parts = fid.readLine().split("=");
        return parts[1].trim();
    }    
    
    public boolean loadData(String name) {
        try {
            String fname = setFullPathName(name);
            FileReader fr=new FileReader(fname);
            
            BufferedReader fid=new BufferedReader(fr);
            String line;
            line = fid.readLine();
            if(!line.equals("#OMEGA PLOT DATA")) {
                fid.close();
                return false;
            }
            jtEpsilonLow.setText(getNextValue(fid));
            jtEpsilonHigh.setText(getNextValue(fid));
            jtOmegaP.setText(getNextValue(fid));
            jtThickness.setText(getNextValue(fid));
            jtKStart1.setText(getNextValue(fid));
            jtKEnd1.setText(getNextValue(fid));
            jtKStep1.setText(getNextValue(fid));
            jtKStart2.setText(getNextValue(fid));
            jtKEnd2.setText(getNextValue(fid));
            jtKStep2.setText(getNextValue(fid));
            fid.close();
            return true;
        }
        catch (IOException ie){            
            return false;
        }    
    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtEpsilonLow = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtEpsilonHigh = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtThickness = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtOmegaP = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jtKStart1 = new javax.swing.JTextField();
        jtKEnd1 = new javax.swing.JTextField();
        jtKStep1 = new javax.swing.JTextField();
        jtKStart2 = new javax.swing.JTextField();
        jtKEnd2 = new javax.swing.JTextField();
        jtKStep2 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Omega Plots");
        setMinimumSize(new java.awt.Dimension(500, 350));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel1.setMinimumSize(new java.awt.Dimension(600, 100));
        jPanel1.setPreferredSize(new java.awt.Dimension(250, 120));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("<html>&epsilon <sub> low");
        jLabel2.setMaximumSize(new java.awt.Dimension(300, 25));
        jLabel2.setMinimumSize(new java.awt.Dimension(300, 25));
        jLabel2.setPreferredSize(new java.awt.Dimension(100, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jLabel2, gridBagConstraints);

        jtEpsilonLow.setText("jTextField1");
        jtEpsilonLow.setMinimumSize(new java.awt.Dimension(80, 27));
        jtEpsilonLow.setName(""); // NOI18N
        jtEpsilonLow.setPreferredSize(new java.awt.Dimension(80, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jtEpsilonLow, gridBagConstraints);
        jtEpsilonLow.getAccessibleContext().setAccessibleName("");

        jLabel3.setText("<html>&epsilon <sub> high");
        jLabel3.setMaximumSize(new java.awt.Dimension(300, 25));
        jLabel3.setMinimumSize(new java.awt.Dimension(300, 25));
        jLabel3.setPreferredSize(new java.awt.Dimension(100, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jLabel3, gridBagConstraints);

        jtEpsilonHigh.setText("jTextField1");
        jtEpsilonHigh.setMinimumSize(new java.awt.Dimension(80, 27));
        jtEpsilonHigh.setName(""); // NOI18N
        jtEpsilonHigh.setPreferredSize(new java.awt.Dimension(80, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jtEpsilonHigh, gridBagConstraints);
        jtEpsilonHigh.getAccessibleContext().setAccessibleName("");

        jLabel4.setText("d");
        jLabel4.setMaximumSize(new java.awt.Dimension(300, 17));
        jLabel4.setMinimumSize(new java.awt.Dimension(300, 17));
        jLabel4.setPreferredSize(new java.awt.Dimension(100, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jLabel4, gridBagConstraints);

        jtThickness.setText("jTextField1");
        jtThickness.setMinimumSize(new java.awt.Dimension(80, 27));
        jtThickness.setName(""); // NOI18N
        jtThickness.setPreferredSize(new java.awt.Dimension(80, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jtThickness, gridBagConstraints);
        jtThickness.getAccessibleContext().setAccessibleName("");

        jLabel5.setText("<html>&omega <sub> P");
        jLabel5.setMaximumSize(new java.awt.Dimension(300, 17));
        jLabel5.setMinimumSize(new java.awt.Dimension(300, 17));
        jLabel5.setPreferredSize(new java.awt.Dimension(100, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jLabel5, gridBagConstraints);

        jtOmegaP.setText("jTextField1");
        jtOmegaP.setMinimumSize(new java.awt.Dimension(80, 27));
        jtOmegaP.setName(""); // NOI18N
        jtOmegaP.setPreferredSize(new java.awt.Dimension(80, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jtOmegaP, gridBagConstraints);
        jtOmegaP.getAccessibleContext().setAccessibleName("");

        jLabel1.setText("<html>&lambda<sub>P");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel13.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel13.setPreferredSize(new java.awt.Dimension(450, 90));
        jPanel13.setLayout(new java.awt.GridBagLayout());

        jLabel16.setText("Start");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel13.add(jLabel16, gridBagConstraints);

        jLabel17.setText("End");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel13.add(jLabel17, gridBagConstraints);

        jLabel18.setText("Step");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel13.add(jLabel18, gridBagConstraints);

        jtKStart1.setText("jTextField1");
        jtKStart1.setMaximumSize(new java.awt.Dimension(80, 27));
        jtKStart1.setMinimumSize(new java.awt.Dimension(80, 27));
        jtKStart1.setPreferredSize(new java.awt.Dimension(80, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel13.add(jtKStart1, gridBagConstraints);

        jtKEnd1.setText("jTextField2");
        jtKEnd1.setMaximumSize(new java.awt.Dimension(80, 27));
        jtKEnd1.setMinimumSize(new java.awt.Dimension(80, 27));
        jtKEnd1.setPreferredSize(new java.awt.Dimension(80, 27));
        jtKEnd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtKEnd1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        jPanel13.add(jtKEnd1, gridBagConstraints);

        jtKStep1.setText("jTextField3");
        jtKStep1.setMaximumSize(new java.awt.Dimension(80, 27));
        jtKStep1.setMinimumSize(new java.awt.Dimension(80, 27));
        jtKStep1.setPreferredSize(new java.awt.Dimension(80, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        jPanel13.add(jtKStep1, gridBagConstraints);

        jtKStart2.setText("jTextField1");
        jtKStart2.setMaximumSize(new java.awt.Dimension(80, 27));
        jtKStart2.setMinimumSize(new java.awt.Dimension(80, 27));
        jtKStart2.setPreferredSize(new java.awt.Dimension(80, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanel13.add(jtKStart2, gridBagConstraints);

        jtKEnd2.setText("jTextField2");
        jtKEnd2.setMaximumSize(new java.awt.Dimension(80, 27));
        jtKEnd2.setMinimumSize(new java.awt.Dimension(80, 27));
        jtKEnd2.setPreferredSize(new java.awt.Dimension(80, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel13.add(jtKEnd2, gridBagConstraints);

        jtKStep2.setText("jTextField3");
        jtKStep2.setMaximumSize(new java.awt.Dimension(80, 27));
        jtKStep2.setMinimumSize(new java.awt.Dimension(80, 27));
        jtKStep2.setPreferredSize(new java.awt.Dimension(80, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel13.add(jtKStep2, gridBagConstraints);

        jLabel19.setText("k (lower range)");
        jLabel19.setMaximumSize(new java.awt.Dimension(250, 17));
        jLabel19.setMinimumSize(new java.awt.Dimension(100, 17));
        jLabel19.setPreferredSize(new java.awt.Dimension(150, 17));
        jLabel19.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel13.add(jLabel19, gridBagConstraints);

        jLabel20.setText("k (upper range)");
        jLabel20.setMaximumSize(new java.awt.Dimension(250, 17));
        jLabel20.setMinimumSize(new java.awt.Dimension(100, 17));
        jLabel20.setPreferredSize(new java.awt.Dimension(150, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel13.add(jLabel20, gridBagConstraints);

        jLabel6.setText("<html>k<sub>P");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        jPanel13.add(jLabel6, gridBagConstraints);

        jLabel7.setText("<html>k<sub>P");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        jPanel13.add(jLabel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(jPanel13, gridBagConstraints);

        jPanel6.setMinimumSize(new java.awt.Dimension(500, 20));
        jPanel6.setPreferredSize(new java.awt.Dimension(400, 50));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jButton1.setText("Plot");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton1, new java.awt.GridBagConstraints());
        jButton1.getAccessibleContext().setAccessibleName("jbPlot");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        getContentPane().add(jPanel6, gridBagConstraints);

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Load values");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Save values");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        String filename=null;
        JFileChooser loadDlg=new JFileChooser();
        String stype="txt";
        loadDlg.setMultiSelectionEnabled(false);
        loadDlg.setCurrentDirectory(new File("."));
        loadDlg.addChoosableFileFilter(new myFileFilter(stype,"Text (*.txt)"));
        int opc=loadDlg.showOpenDialog(this);
        if(opc==JFileChooser.APPROVE_OPTION) {
            filename=loadDlg.getSelectedFile().getName();
            if(filename!=null) {
                filename=loadDlg.getSelectedFile().getAbsolutePath();                     
            }
        }
        if(filename!=null) {
            if(!loadData(filename))
                JOptionPane.showMessageDialog(this,
                        "File \""+loadDlg.getSelectedFile().getName()+"\" is not a valid plot data file!",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    public boolean validateInputs() {
        try {
            epsilonLow = Double.parseDouble(jtEpsilonLow.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Invalid value of epsilon low!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        try {
            epsilonHigh = Double.parseDouble(jtEpsilonHigh.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Invalid value of epsilon high!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        try {
            omegaP = Double.parseDouble(jtOmegaP.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Invalid value of omega P!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        try {
            thickness = Double.parseDouble(jtThickness.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Invalid value of thickness d!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
                      
        try {
            kStart1 = Double.parseDouble(jtKStart1.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Invalid k lower range start value!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        try {
            kEnd1 = Double.parseDouble(jtKEnd1.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Invalid k lower range end value!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        try {
            kStep1 = Double.parseDouble(jtKStep1.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Invalid k lower range step value!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        try {
            kStart2 = Double.parseDouble(jtKStart2.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Invalid k upper range start value!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        try {
            kEnd2 = Double.parseDouble(jtKEnd2.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Invalid k upper range end value!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        try {
            kStep2 = Double.parseDouble(jtKStep2.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Invalid k upper range step value!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(validateInputs()) {
            Calculator calc = new Calculator();
            calc.plot(this);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        if(validateInputs()) {
            JFileChooser saveDlg=new JFileChooser();
            String stype="txt";
            saveDlg.setMultiSelectionEnabled(false);
            saveDlg.setCurrentDirectory(new File("."));
            saveDlg.addChoosableFileFilter(new myFileFilter(stype,"Text (*.txt)"));
            int opc=saveDlg.showSaveDialog(this);
            if(opc==JFileChooser.APPROVE_OPTION) {
                String filename=saveDlg.getSelectedFile().getName();
                if(filename!=null) {
                    filename=saveDlg.getSelectedFile().getAbsolutePath();
                    if(!filename.endsWith(".txt")) 
                        filename=filename.concat(".txt");                     
                    saveData(filename);
                }
            }        
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jtKEnd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtKEnd1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtKEnd1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OmegaPlots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OmegaPlots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OmegaPlots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OmegaPlots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                OmegaPlots gui = new OmegaPlots();
                gui.pack();
                gui.setLocationRelativeTo(null);
                gui.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField jtEpsilonHigh;
    private javax.swing.JTextField jtEpsilonLow;
    private javax.swing.JTextField jtKEnd1;
    private javax.swing.JTextField jtKEnd2;
    private javax.swing.JTextField jtKStart1;
    private javax.swing.JTextField jtKStart2;
    private javax.swing.JTextField jtKStep1;
    private javax.swing.JTextField jtKStep2;
    private javax.swing.JTextField jtOmegaP;
    private javax.swing.JTextField jtThickness;
    // End of variables declaration//GEN-END:variables
}
